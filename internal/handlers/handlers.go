package handlers

import (
	"PrytkovaBot/internal/services"
	st "PrytkovaBot/internal/storage"
	"PrytkovaBot/internal/utils"
	"fmt"
	tele "gopkg.in/telebot.v4"
	"strconv"
	"strings"
)

var AdminId int64

const (
	DietButton         = "buy_item"
	RegisterButton     = "register"
	ProgramsButton     = "programs"
	AcceptRegistration = "accept_registration"
	FirstDiet          = "first_diet"
	SecondDiet         = "second_diet"
	Pay                = "pay"
	FirstDietAmount    = 990
	SecondDietAmount   = 1590
	CheckPayment       = "check_payment"
	Book               = "book"
	MyBooks            = "–ú–æ–∏ –∑–∞–ø–∏—Å–∏"
	Back               = "back"
)

func RegisterHandlers(b *tele.Bot, adminId int64) {

	AdminId = adminId
	b.Handle("/start", startHandler)
	b.Handle(tele.OnCallback, inlineButtonHandler)
	b.Handle(tele.OnText, textHandler)
}

func textHandler(c tele.Context) error {
	if c.Text() == MyBooks {
		return handleMyBooks(c)
	}

	return nil
}

func startHandler(c tele.Context) error {
	if c.Sender().ID == AdminId {
		keyboard := &tele.ReplyMarkup{ResizeKeyboard: true}
		btn := keyboard.Text(MyBooks)
		keyboard.Reply(keyboard.Row(btn))
		return c.Send("–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", keyboard)
	}
	selector := &tele.ReplyMarkup{}
	btnBuy := selector.Data("–†–∞—Ü–∏–æ–Ω—ã", DietButton)
	btnRegister := selector.Data("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", RegisterButton)
	btnPrograms := selector.Data("–ü—Ä–æ–≥—Ä–∞–º–º—ã", ProgramsButton)
	selector.Inline(
		selector.Row(btnBuy),
		selector.Row(btnRegister),
		selector.Row(btnPrograms),
	)
	return c.Send("–ù–∞ —Å–≤—è–∑–∏ –ø–æ–º–æ—â–Ω–∏–∫ –†–µ–≥–∏–Ω—ã –ü—Ä—ã—Ç–∫–æ–≤–æ–πüë©‚Äçüíº.\n–†–∞–¥a –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—á–∫–µ!üëã –¢—É—Ç —Ç—ã –Ω–∞–π–¥–µ—à—å –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è, –ø–æ—Ö—É–¥–µ–Ω–∏—è –∏ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏ –¥–ª—è –≤—Å–µ–π —Å–µ–º—å–∏üòã.\n\nüéØ –°–º–æ—Ç—Ä–∏,  —É –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π. –í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±—è —Å–µ–π—á–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", selector)
}

func inlineButtonHandler(c tele.Context) error {
	_ = c.Respond()
	data := strings.TrimSpace(c.Callback().Data)
	parts := strings.Split(data, "@")

	if len(parts) < 1 {
		return c.Respond()
	}

	action := parts[0]

	switch action {
	case Back:

		switch parts[1] {
		case "start":
			return startHandler(c)
		case "diets":
			return dietHandler(c)
		}
	case RegisterButton:
		return registerHandler(c)
	case ProgramsButton:
		return programsHandler(c)
	case AcceptRegistration:
		if len(parts) < 2 {
			return c.Send("–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏")
		}
		return handleRegistrationResponse(c, parts[1], parts[2], parts[3])
	case DietButton:
		return dietHandler(c)
	case FirstDiet, SecondDiet:
		return handleDietButtons(c, action)
	case Pay:
		switch parts[1] {
		case FirstDiet:
			return handlePay(c, FirstDietAmount)
		case SecondDiet:
			return handlePay(c, SecondDietAmount)
		}
	case CheckPayment:
		return handleCheckPayment(c, parts[1], parts[2])
	case Book:
		return handleBook(c, parts[1])
	case MyBooks:
		return handleMyBooks(c)
	}
	return c.Respond()
}

func handleMyBooks(c tele.Context) error {
	message, err := services.FormatBookedSlots(st.Db)
	if err != nil {
		return err
	}
	return c.Send(message)
}

func handleBook(c tele.Context, timeId string) error {
	slotId, err := strconv.Atoi(timeId)
	username := c.Sender().Username
	userId := c.Sender().ID
	if err != nil {
		return err
	}

	slotTime, err := st.GetTimeBySlotId(st.Db, int64(slotId))
	if err != nil {
		return err
	}

	//responseString := utils.PrepareForMarkdown(fmt.Sprintf("–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é %s –≤ %s. \n–ü–æ–∂–∞—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ [–∞–Ω–∫–µ—Ç—É](https://forms.gle/NnZ7XoQkKxS2FmDk9)", slotTime.Format("02.01"), slotTime.Format("15:04")))
	responseString := fmt.Sprintf("–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é %s –≤ %s. \n–ü–æ–∂–∞—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ [–∞–Ω–∫–µ—Ç—É](https://forms.gle/NnZ7XoQkKxS2FmDk9).", slotTime.Format("02.01"), slotTime.Format("15:04"))
	fmt.Println(responseString)
	err = c.Edit(responseString, tele.ModeMarkdown)
	if err != nil {
		return err
	}

	selector := &tele.ReplyMarkup{}
	btnAccept := selector.Data("‚úÖ", fmt.Sprintf("%s@%d@%s@%d", AcceptRegistration, c.Sender().ID, c.Sender().Username, slotId))
	selector.Inline(
		selector.Row(btnAccept),
	)

	_, err = c.Bot().Send(
		tele.ChatID(AdminId),
		fmt.Sprintf("–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç: @%s (ID: %d) —Ö–æ—á–µ—Ç –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –Ω–∞ %s –≤ %s.\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?",
			username, userId, slotTime.Format("02.01 "), slotTime.Format("15:04"),
		),
		selector)
	return err
}

func handleCheckPayment(c tele.Context, paymentId string, amount string) error {
	state, err := services.GetState(paymentId)
	if err != nil {
		return err
	}
	if state == "CONFIRMED" {
		err = c.Send("–ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!")
		var document *tele.Document
		a, _ := strconv.ParseFloat(amount, 64)
		switch a {
		case FirstDietAmount:
			document = &tele.Document{File: tele.FromDisk("diet1.pdf"), FileName: "–î–∏–µ—Ç–∞ –Ω–∞ 2 –Ω–µ–¥–µ–ª–∏.pdf"}
		case SecondDietAmount:
			document = &tele.Document{File: tele.FromDisk("diet2.pdf"), FileName: "–î–∏–µ—Ç–∞ –Ω–∞ 4 –Ω–µ–¥–µ–ª–∏.pdf"}
		}
		_, err = c.Bot().Send(c.Sender(), document, tele.Protected)
	}
	return nil
}

func handlePay(c tele.Context, amount float64) error {
	paymentUrl, paymentId, err := services.InitTransaction(amount)
	if err != nil {
		return err
	}
	selector := &tele.ReplyMarkup{}
	btnCheckPayment := selector.Data("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂", fmt.Sprintf("%s@%s@%f", CheckPayment, paymentId, amount))
	selector.Inline(selector.Row(btnCheckPayment))
	return c.Edit("–û–ø–ª–∞—Ç–∏—Ç—å: "+paymentUrl, selector)
}

func programsHandler(c tele.Context) error {
	selector := &tele.ReplyMarkup{}
	btnBack := selector.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", Back+"@start")

	selector.Inline(
		selector.Row(
			selector.URL("–•–æ—á—É –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É!", utils.GetEncodedString("https://wa.me/79659413788", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Ö–æ—á—É –∫ –≤–∞–º –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É.")),
		),
		selector.Row(btnBack),
	)

	return c.Send("–Ø –±—É–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–æ–±–æ–π —à–∞–≥ –∑–∞ —à–∞–≥–æ–º, –æ—Ç—Å–ª–µ–∂–∏–≤–∞—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É—è –ø—Ä–æ–≥—Ä–∞–º–º—É\\. "+
		"–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤–∫–ª—é—á–∞–µ—Ç –Ω–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —á–µ–∫\\-–ª–∏—Å—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\\. –í–º–µ—Å—Ç–µ –º—ã –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–µ–º —Ç–≤–æ–∏ —Ü–µ–ª–∏ "+
		"–∏ —Å–¥–µ–ª–∞–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–æ—Ü–µ—Å—Å –±—ã–ª –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º\\.\n"+
		"üîπ*–ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å:*\n\n‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n‚Ä¢ –ß–µ–∫\\-–ª–∏—Å—Ç—ã –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è\n‚Ä¢ –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n",
		tele.ModeMarkdownV2, selector)
}

func registerHandler(c tele.Context) error {
	btns, err := services.FormatAvailableSlots(st.Db)
	if err != nil {
		return err
	}
	timeSelector := &tele.ReplyMarkup{}
	btnBack := tele.InlineButton{
		Text: "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
		Data: Back + "@start",
	}

	btns = append(btns, []tele.InlineButton{btnBack})

	timeSelector.InlineKeyboard = btns

	err = c.Send("–ü–æ—Ö–æ–∂–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –ø–∏—Ç–∞–Ω–∏–∏, –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é —Ä–∞—Ü–∏–æ–Ω–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Ç–æ–º, —á—Ç–æ –º–µ—à–∞–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥, –º–æ—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ\\. –ú—ã —Ä–∞–∑–±–µ—Ä–µ–º—Å—è, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ç–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—ã–º –∏ —É–¥–æ–±–Ω—ã–º\\."+
		"\n*–í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è:*", tele.ModeMarkdownV2, timeSelector)

	return err
}

func handleRegistrationResponse(c tele.Context, userIDStr, username, slotId string) error {
	userToId, err := strconv.ParseInt(userIDStr, 10, 64)
	if err != nil {
		return c.Send("–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
	}
	greeting := "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è —Ö–æ—á—É –∫ –≤–∞–º –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é."
	selector := &tele.ReplyMarkup{}
	selector.Inline(
		selector.Row(
			selector.URL("WhatsApp", utils.GetEncodedString("https://wa.me/79659413788", greeting)),
		),
		selector.Row(
			selector.URL("Telegram", utils.GetEncodedString("https://t.me/ReginaUspeshnaya", greeting)),
		),
	)

	slotIdInt, err := strconv.Atoi(slotId)
	if err != nil {
		return err
	}
	err = st.BookSlot(st.Db, slotIdInt, userToId, username)
	if err != nil {
		return err
	}

	responseText := "‚úÖ –ó–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!"
	_, err = c.Bot().Send(tele.ChatID(userToId), fmt.Sprintf("%s\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–πüëáüèª", responseText), selector)
	err = c.Edit(strings.ReplaceAll(c.Message().Text, "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?", ""))
	err = c.Reply(responseText)
	return err
}

func dietHandler(c tele.Context) error {
	selector := &tele.ReplyMarkup{}
	btnFirst := selector.Data("–Ω–∞ 2 –Ω–µ–¥–µ–ª–∏ –∑–∞ 990 —Ä—É–±–ª–µ–π üî•", FirstDiet)
	btnSecond := selector.Data("–Ω–∞ 4 –Ω–µ–¥–µ–ª–∏ –∑–∞ 1590 —Ä—É–±–ª–µ–π üî•", SecondDiet)
	btnBack := selector.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", Back+"@start")
	selector.Inline(
		selector.Row(btnFirst),
		selector.Row(btnSecond),
		selector.Row(btnBack),
	)

	return c.Send("–ï—Å—Ç—å –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –†–ê–¶–ò–û–ù–ê ‚Äî –æ–Ω–∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏ –ª–µ–≥–∫–∏–µ\\! "+
		"–≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –Ω–∞–ª–∞–¥–∏—Ç—å –ø–∏—Ç–∞–Ω–∏–µ –±–µ–∑ –∂–µ—Å—Ç–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π\\. –¢—ã –±—É–¥–µ—à—å —É–¥–∏–≤–ª–µ–Ω–∞, "+
		"–∫–∞–∫ –ø—Ä–æ—Å—Ç–æ –∏ –≤–∫—É—Å–Ω–æ –º–æ–∂–Ω–æ –ø–∏—Ç–∞—Ç—å—Å—è\\!\n\nüîπ*–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:*\n‚Ä¢ –ü—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç\n‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã\n‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Ä–µ—Ü–µ–ø—Ç—ã\n", tele.ModeMarkdownV2, selector)
}

func handleDietButtons(c tele.Context, action string) error {
	selector := &tele.ReplyMarkup{}
	unique := ""
	description := ""
	if action == FirstDiet {
		unique = Pay + "@" + FirstDiet
		description = "ü•ó –†–∞—Ü–∏–æ–Ω –Ω–∞ 2 –Ω–µ–¥–µ–ª–∏\n–î–ª—è –º—è–≥–∫–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –∏ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞\n\nüíö –•–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –ø–∏—Ç–∞—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–æ –Ω–µ –∑–Ω–∞–µ—à—å —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å?\n–≠—Ç–æ—Ç —Ä–∞—Ü–∏–æ–Ω ‚Äî –∫–∞–∫ –Ω–∞–¥—ë–∂–Ω–∞—è –æ–ø–æ—Ä–∞: –≤—Å—ë –ø—Ä–æ–¥—É–º–∞–Ω–æ –∑–∞ —Ç–µ–±—è. –ë–µ–∑ –≥–æ–ª–æ–¥–∞, –±–µ–∑ –ë–ê–î–æ–≤, –±–µ–∑ –∂—ë—Å—Ç–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.\n\nüî∏ 2 –Ω–µ–¥–µ–ª–∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ, –≤–∫—É—Å–Ω–æ–≥–æ –∏ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è\nüî∏ 5 –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏ –≤ –¥–µ–Ω—å: –∑–∞–≤—Ç—Ä–∞–∫, –æ–±–µ–¥, —É–∂–∏–Ω, –ø–µ—Ä–µ–∫—É—Å—ã\nüî∏ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –≤–µ—Å–∞, –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–ø–ø–µ—Ç–∏—Ç–∞, —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —ç–Ω–µ—Ä–≥–∏–∏\nüî∏ –ú–µ–Ω—é –±–µ–∑ ¬´—Å—Ç—Ä–∞–Ω–Ω—ã—Ö¬ª –ø—Ä–æ–¥—É–∫—Ç–æ–≤ ‚Äî —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –≤ –ª—é–±–æ–º –º–∞–≥–∞–∑–∏–Ω–µ\nüî∏ –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–æ –ø–æ –±–µ–ª–∫–∞–º, —É–≥–ª–µ–≤–æ–¥–∞–º, –∂–∏—Ä–∞–º\nüî∏ –ú–æ–∂–Ω–æ –≥–æ—Ç–æ–≤–∏—Ç—å –Ω–∞ –≤—Å—é —Å–µ–º—å—é ‚Äî –æ–Ω–∏ —Ç–æ–∂–µ –±—É–¥—É—Ç –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ!\n\nüåø –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–¥–æ–π–¥—ë—Ç —Ç–µ–º, –∫—Ç–æ:\n‚Äî —Ö–æ—á–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–∏—Ç–∞–Ω–∏–µ –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞\n‚Äî –ø—Ä–æ–±–æ–≤–∞–ª \"–ü–ü\", –Ω–æ –≤—Å—ë –≤—Ä–µ–º—è —Å—Ä—ã–≤–∞–ª—Å—è\n‚Äî —Ö–æ—á–µ—Ç —É–±—Ä–∞—Ç—å –≤–∑–¥—É—Ç–∏–µ, —Ç—è–≥—É –∫ —Å–ª–∞–¥–∫–æ–º—É –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∏–∂–∞—Ç—å –≤–µ—Å\n\nüì• –ì–æ—Ç–æ–≤ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –∑–∞–±–æ—Ç–æ–π? –≠—Ç–æ—Ç —Ä–∞—Ü–∏–æ–Ω ‚Äî —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ —Å–µ–±–µ.\n"
	} else if action == SecondDiet {
		unique = Pay + "@" + SecondDiet
		description = "ü•ë –†–∞—Ü–∏–æ–Ω –Ω–∞ 4 –Ω–µ–¥–µ–ª–∏\n–î–ª—è —Ç–µ—Ö, –∫—Ç–æ –≥–æ—Ç–æ–≤ –∫ —É—Å—Ç–æ–π—á–∏–≤–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É\n\nüå∏ 4 –Ω–µ–¥–µ–ª–∏ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—é. –≠—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–ª–∞ –∏ –ø–∏—Ç–∞–Ω–∏—è.\n\n–¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –µ—à—å.\n–¢—ã –Ω–∞—á–∏–Ω–∞–µ—à—å –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ ‚Äî –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ, –≤–∫—É—Å–Ω–æ, —Å—Ç–∞–±–∏–ª—å–Ω–æ.\n\nüîπ 4 –Ω–µ–¥–µ–ª–∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ, –ª—ë–≥–∫–æ–≥–æ –∏ –≤–∫—É—Å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è\nüîπ –ß—ë—Ç–∫–∏–π –ø–ª–∞–Ω –±–µ–∑ —Å–∫—É–∫–∏ –∏ –æ–¥–Ω–æ–æ–±—Ä–∞–∑–∏—è\nüîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–æ–Ω–∞, –ñ–ö–¢ –∏ —É—Ä–æ–≤–Ω—è —ç–Ω–µ—Ä–≥–∏–∏\nüîπ –ï–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å—ã—â–∞–µ—Ç, –∞ –Ω–µ ¬´—Ä–∞–∑–≥–æ–Ω—è–µ—Ç¬ª –∞–ø–ø–µ—Ç–∏—Ç\nüîπ –†–∞—Ü–∏–æ–Ω —Å–æ—Å—Ç–∞–≤–ª–µ–Ω —Å —É—á—ë—Ç–æ–º —Ñ–∏–∑–∏–æ–ª–æ–≥–∏–∏, –±–µ–∑ –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤\nüîπ –ë–µ–∑ –ë–ê–î–æ–≤, –±–µ–∑ —ç–∫–∑–æ—Ç–∏–∫–∏, –±–µ–∑ —Å—Ç—Ä–∞—Ö–∞ –ø–µ—Ä–µ–¥ –µ–¥–æ–π\n\nüåø –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–¥–æ–π–¥—ë—Ç —Ç–µ–º, –∫—Ç–æ:\n‚Äî —Ö–æ—á–µ—Ç –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ—Ö—É–¥–µ—Ç—å, –∞ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø–∏—Ç–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –¥–µ—Ä–∂–∏—Ç—Å—è\n‚Äî —É—Å—Ç–∞–ª –æ—Ç –¥–∏–µ—Ç –∏ –æ—Ç–∫–∞—Ç–æ–≤\n‚Äî –≥–æ—Ç–æ–≤ –∑–∞–ª–æ–∂–∏—Ç—å –ø—Ä–æ—á–Ω—É—é –æ—Å–Ω–æ–≤—É –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è\n\nüß° –≠—Ç–æ—Ç —Ä–∞—Ü–∏–æ–Ω ‚Äî –∫–∞–∫ –ª–∏—á–Ω–∞—è –∑–∞–±–æ—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è —Ä—è–¥–æ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.\n–¢—ã –Ω–µ –æ–¥–∏–Ω/–∞. –¢—ã –≤ –ø–æ—Ç–æ–∫–µ. –¢—ã –Ω–∞—á–∏–Ω–∞–µ—à—å –∂–∏—Ç—å –ª–µ–≥—á–µ.\n"
	}
	btnBuy := selector.Data("–û–ø–ª–∞—Ç–∏—Ç—å", unique)
	btnBack := selector.Data("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", Back+"@diets")

	selector.Inline(
		selector.Row(btnBuy),
		selector.Row(btnBack),
	)
	return c.Send(description, selector)
}
